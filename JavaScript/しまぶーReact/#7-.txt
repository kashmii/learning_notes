#7
「コンポーネントを繰り返すときはmapをよく使います」

データと処理を分ける考え方は、コンポーネントの再利用性を高めるためにも重要です。

mapを使って同じ表示を繰り返し行う方法
  1. 各要素に表示させるデータを配列に格納する
  2. 同じ表示となる部分をコンポーネント化する
  3. mapを使って配列の数だけコンポーネントを繰り返す

===

#8
「jsとjsxどっち？ディレクトリ構成は何がいい？絶対パスインポートはどうやるの？_appってどう使うの？」

jsx ... .tsx ファイルは、React コンポーネントが含まれる場合に使用されます
js ... .ts ファイルは純粋な TypeScript コードが含まれる場合に使用

JavaScriptの重要な機能
  ファイル名をindexにするとディレクトリを参照したときにindex.jsxを読み込んでくれる
    * importするときにファイル名を省略できる！

_app.tsx ... 全てのページで共通の処理を書くことができる
  例えば、全てのページで共通のCSSを読み込むことができる
  railsでいうapplication.html.erbのようなもの

===

#9
「クリックイベント（onClick）はどう扱う？メソッド（関数）の書く位置はどこがオススメ？」

メソッドをexport function の中に書くかどうか問題
  コンポーネントを描画する段階で、コンポーネント内のメソッドも再生成される

  * ただ中に書いた場合でもuseCallbackを使うことで再生成を防ぐことができる

  優先順位
  ひとつめ
    コンポーネントの外に書く
  ふたつめ
    コンポーネントの中に書く(必要であればuseCallbackを使う)